[
["index.html", "Great Salt Lake Nutrient Analyses Introduction", " Great Salt Lake Nutrient Analyses Jake Vander Laan, Utah Division of Water Quality 2019-03-28 Introduction "],
["packages.html", "1 Package installs", " 1 Package installs #install.packages(c(&quot;dataRetrieval&quot;,&quot;dplyr&quot;,&quot;DT&quot;, &quot;devtools&quot;)) #devtools::install_github(&quot;utah-dwq/wqTools&quot;) library(wqTools) library(magrittr) library(plotly) ## Loading required package: ggplot2 ## ## Attaching package: &#39;plotly&#39; ## The following object is masked from &#39;package:ggplot2&#39;: ## ## last_plot ## The following object is masked from &#39;package:stats&#39;: ## ## filter ## The following object is masked from &#39;package:graphics&#39;: ## ## layout "],
["data-imports.html", "2 Import data sources 2.1 Site list 2.2 Lake elevation 2.3 Tributary discharge 2.4 Lake &amp; tributary water quality data 2.5 Calculate N:P ratios 2.6 Read site locations 2.7 Add site metadata to site locations 2.8 Add site metadata to WQ data", " 2 Import data sources 2.1 Site list site_list=read.csv(file=&quot;site_list.csv&quot;) DT::datatable(site_list, rownames=FALSE, filter=&quot;top&quot;, options = list(scrollY = &#39;600px&#39;, paging = FALSE, scrollX=TRUE, dom=&quot;ltipr&quot;) ) 2.2 Lake elevation elevation=dataRetrieval::readNWISdv(siteNumbers=site_list$SiteNumber[site_list$SiteType==&quot;Elevation gauge&quot;],parameterCd=&quot;62614&quot;) elevation=dplyr::rename(elevation, elev_ft=X_62614_00003) 2.3 Tributary discharge 2.3.1 Read discharge gauges discharge=dataRetrieval::readNWISuv(siteNumbers=site_list$SiteNumber[site_list$SiteType==&quot;Discharge gauge&quot;],parameterCd=&quot;00060&quot;, tz=&quot;America/Denver&quot;, startDate = &quot;2010-01-01&quot;, endDate = &quot;2018-12-31&quot;) discharge=dplyr::rename(discharge, discharge_cfs=X_00060_00000, ) summary(discharge) ## agency_cd site_no dateTime ## Length:1191760 Length:1191760 Min. :2010-01-01 00:00:00 ## Class :character Class :character 1st Qu.:2012-04-21 12:00:00 ## Mode :character Mode :character Median :2014-08-12 08:00:00 ## Mean :2014-07-26 23:11:47 ## 3rd Qu.:2016-10-29 01:30:00 ## Max. :2018-12-31 23:45:00 ## ## discharge_cfs X_00060_00000_cd tz_cd ## Min. :-2760.0 Length:1191760 Length:1191760 ## 1st Qu.: 71.5 Class :character Class :character ## Median : 199.0 Mode :character Mode :character ## Mean : 536.5 ## 3rd Qu.: 642.0 ## Max. : 9780.0 ## NA&#39;s :1 2.3.2 Estimate BRB discharge from Corinne site brb_dis=discharge[discharge$site_no==10126000,] brb_dis$site_no=10010060 brb_dis$discharge_cfs=83.0813+1.0958*brb_dis$discharge_cfs discharge=rbind(discharge,brb_dis) 2.4 Lake &amp; tributary water quality data wq_data=dataRetrieval::readNWISqw(expanded=F,tz=&quot;America/Denver&quot;,startDate=&quot;01-01-2010&quot;, endDate=&quot;12-31-2018&quot;, siteNumbers=site_list$SiteNumber[site_list$SiteType %in% c(&quot;Lake&quot;, &quot;Discharge gauge&quot;, &quot;Causeway breach&quot;)], parameterCd=c( &quot;00098&quot;, &quot;00665&quot;, &quot;00666&quot;, &quot;32209&quot;, &quot;62854&quot;, &quot;62855&quot;, &quot;70305&quot;, &quot;00480&quot;) ) wq_data=dplyr::rename(wq_data, Sampling_depth_m=p00098, Total_phosphorus_mgL=p00665, Filtered_phosphorus_mgL=p00666, Chlorophyll_a_ugL=p32209, Filtered_nitrogen_mgL=p62854, Total_nitrogen_mgL=p62855, Salinity_gL=p70305)#, #Salinity2_gL=p00480) #plot_ly(wq_data, x=~sample_dt) %&gt;% # add_markers(y=~Salinity_gL, name=&#39;Salinity (g/L) p70305&#39;, marker=list(size=15, opacity=0.8)) %&gt;% # add_markers(y=~Salinity2_gL, name=&#39;Salinity (g/L) p00480&#39;, marker=list(size=15, opacity=0.8)) %&gt;% # layout(title = &quot;GSL salinity - all sites&quot;, # xaxis = list(title = &quot;&quot;), # yaxis = list(side = &#39;left&#39;, title = &#39;Salinity (g/L)&#39;), # legend = list(x = 0.65, y = 0.9) # ) %&gt;% # config(displaylogo = FALSE, # modeBarButtonsToRemove = c( # &#39;sendDataToCloud&#39;, # &#39;hoverClosestCartesian&#39;, # &#39;hoverCompareCartesian&#39;, # &#39;lasso2d&#39;, # &#39;select2d&#39; # ) # ) ## Define surface and bottom samples, add month wq_data=within(wq_data,{ rel_depth=NA rel_depth[Sampling_depth_m&lt;=1]=&quot;Surface&quot; rel_depth[Sampling_depth_m&gt;=4]=&quot;Bottom&quot; month=lubridate::month(sample_dt) }) 2.5 Calculate N:P ratios wq_data=within(wq_data,{ FN_FP=Filtered_nitrogen_mgL/Filtered_phosphorus_mgL * (30.974/14.007) TN_TP=Total_nitrogen_mgL/Total_phosphorus_mgL * (30.974/14.007) }) 2.6 Read site locations sites=dataRetrieval::readNWISsite(siteNumbers=site_list$SiteNumber) 2.7 Add site metadata to site locations sites=dataRetrieval::readNWISsite(siteNumbers=site_list$SiteNumber) sites=merge(sites,site_list, by.x=c(&quot;site_no&quot;,&quot;station_nm&quot;), by.y=c(&quot;SiteNumber&quot;,&quot;SiteName&quot;)) 2.8 Add site metadata to WQ data wq_data=merge(wq_data,sites, all.x=T) "],
["site-map.html", "3 Site map", " 3 Site map sites=within(sites, { LatitudeMeasure=dec_lat_va LongitudeMeasure=dec_long_va MonitoringLocationTypeName=SiteType MonitoringLocationIdentifier=site_no MonitoringLocationName=station_nm }) site_map=buildMap(sites=sites, plot_polys=F, search=&quot;&quot;) site_map=leaflet::fitBounds(site_map, lng1=min(sites$LongitudeMeasure), lng2=max(sites$LongitudeMeasure), lat1=min(sites$LatitudeMeasure), lat2=max(sites$LatitudeMeasure)) site_map "],
["elev-analyses.html", "4 GSL Elevation", " 4 GSL Elevation elevation=merge(elevation, site_list, by.x=&quot;site_no&quot;, by.y=&quot;SiteNumber&quot;, all.x=T) elev_plot= plot_ly(elevation, x=~Date) %&gt;% add_lines(y=~elev_ft, x=~Date, name=~Bay) %&gt;% layout(title = &quot;GSL Water surface elevation&quot;, xaxis = list(title = &quot;&quot;), yaxis = list(side = &#39;left&#39;, title = &#39;Elevation (ft)&#39;) ) %&gt;% config(displaylogo = FALSE, collaborate = FALSE, modeBarButtonsToRemove = c( &#39;sendDataToCloud&#39;, &#39;hoverClosestCartesian&#39;, &#39;hoverCompareCartesian&#39;, &#39;lasso2d&#39;, &#39;select2d&#39; ) ) elev_plot "],
["trib-disch-analyses.html", "5 Tributary discharge 5.1 Add site metadata 5.2 Aggregate to daily &amp; monthly mean values 5.3 Calculate monthly inflow totals 5.4 Boxplot by site 5.5 Daily discharge time series 5.6 Monthly water inflow 5.7 Annual inflow to Gilbert Bay", " 5 Tributary discharge 5.1 Add site metadata discharge=merge(discharge, site_list, by.x=&quot;site_no&quot;, by.y=&quot;SiteNumber&quot;, all.x=T) 5.2 Aggregate to daily &amp; monthly mean values discharge$date=as.Date(discharge$dateTime, format=&quot;%Y-%m-%d&quot;) daily_disch=aggregate(discharge_cfs~site_no+SiteName+date, data=discharge, FUN=&#39;mean&#39;) daily_disch=within(daily_disch,{ year=lubridate::year(date) month=lubridate::month(date) days_in_month=lubridate::days_in_month(date) }) monthly_disch=aggregate(discharge_cfs~site_no+SiteName+month+year+days_in_month, data=daily_disch, FUN=&#39;mean&#39;) names(monthly_disch)[names(monthly_disch)==&quot;discharge_cfs&quot;]=&quot;mean_monthly_disch_cfs&quot; 5.3 Calculate monthly inflow totals monthly_disch=within(monthly_disch, { monthly_inflow_af=mean_monthly_disch_cfs*days_in_month*86400/43559.9 yr_mo=as.Date(paste(monthly_disch$year,monthly_disch$month,&quot;01&quot;,sep=&quot;-&quot;), format=&quot;%Y-%m-%d&quot;) }) 5.4 Boxplot by site disch_boxplot= plot_ly(daily_disch, x=~site_no, y=~discharge_cfs, type=&#39;box&#39;, name=~SiteName) %&gt;% layout(title = &quot;GSL tributary discharge&quot;, xaxis = list(title = &quot;USGS site number&quot;), yaxis = list(side = &#39;left&#39;, title = &#39;Daily discharge (cfs)&#39;) ) %&gt;% config(displaylogo = FALSE, modeBarButtonsToRemove = c( &#39;sendDataToCloud&#39;, &#39;hoverClosestCartesian&#39;, &#39;hoverCompareCartesian&#39;, &#39;lasso2d&#39;, &#39;select2d&#39; ) ) disch_boxplot 5.5 Daily discharge time series disch_ts= plot_ly(daily_disch, x=~date) %&gt;% add_lines(y=~discharge_cfs, x=~date, name=~SiteName) %&gt;% layout(title = &quot;GSL tributary daily discharge&quot;, xaxis = list(title = &quot;&quot;), yaxis = list(side = &#39;left&#39;, title = &#39;Daily discharge (cfs)&#39;) ) %&gt;% config(displaylogo = FALSE, modeBarButtonsToRemove = c( &#39;sendDataToCloud&#39;, &#39;hoverClosestCartesian&#39;, &#39;hoverCompareCartesian&#39;, &#39;lasso2d&#39;, &#39;select2d&#39; ) ) disch_ts 5.6 Monthly water inflow mon_inflow= plot_ly(monthly_disch, x=~yr_mo) %&gt;% add_lines(y=~monthly_inflow_af, x=~yr_mo, name=~SiteName) %&gt;% layout(title = &quot;GSL tributary monthly inflow&quot;, xaxis = list(title = &quot;&quot;), yaxis = list(side = &#39;left&#39;, title = &#39;Monthly inflow (acre-feet)&#39;) ) %&gt;% config(displaylogo = FALSE, collaborate = FALSE, modeBarButtonsToRemove = c( &#39;sendDataToCloud&#39;, &#39;hoverClosestCartesian&#39;, &#39;hoverCompareCartesian&#39;, &#39;lasso2d&#39;, &#39;select2d&#39; ) ) mon_inflow 5.7 Annual inflow to Gilbert Bay table(unique(monthly_disch[,c(&quot;month&quot;,&quot;year&quot;)])) ## year ## month 2010 2011 2012 2013 2014 2015 2016 2017 2018 2019 ## 1 1 1 1 1 1 1 1 1 1 1 ## 2 1 1 1 1 1 1 1 1 1 0 ## 3 1 1 1 1 1 1 1 1 1 0 ## 4 1 1 1 1 1 1 1 1 1 0 ## 5 1 1 1 1 1 1 1 1 1 0 ## 6 1 1 1 1 1 1 1 1 1 0 ## 7 1 1 1 1 1 1 1 1 1 0 ## 8 1 1 1 1 1 1 1 1 1 0 ## 9 1 1 1 1 1 1 1 1 1 0 ## 10 1 1 1 1 1 1 1 1 1 0 ## 11 1 1 1 1 1 1 1 1 1 0 ## 12 1 1 1 1 1 1 1 1 1 0 ann_disch=aggregate(monthly_inflow_af~site_no+SiteName+year, monthly_disch, FUN=&#39;sum&#39;) ann_disch=ann_disch[ann_disch$year&lt;2019 &amp; ann_disch$site_no!=10126000,] names(ann_disch)[names(ann_disch)==&quot;monthly_inflow_af&quot;]=&quot;ann_inflow_af&quot; ann_disch_mean=aggregate(ann_inflow_af~site_no+SiteName, ann_disch, FUN=&#39;mean&#39;) sum(ann_disch_mean$ann_inflow_af) ## [1] 1702641 "]
]
